"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestIdleCallback = exports.cancelIdleCallback = void 0;

/**
 * Simple requestIdleCallback polyfill
 * Can be removed when all browsers support requestIdleCallback: https://caniuse.com/requestidlecallback
 * @param callback
 * @param options
 */
var requestIdleCallbackShim = function requestIdleCallbackShim(callback, options) {
  var start = Date.now();
  return window.setTimeout(() => {
    callback({
      didTimeout: false,

      timeRemaining() {
        return Math.max(0, Date.now() - start);
      }

    });
  }, 0);
};

var cancelIdleCallbackShim = function cancelIdleCallbackShim(handle) {
  return window.clearTimeout(handle);
};

var requestIdleCallback = window.requestIdleCallback || requestIdleCallbackShim;
exports.requestIdleCallback = requestIdleCallback;
var cancelIdleCallback = window.cancelIdleCallback || cancelIdleCallbackShim;
exports.cancelIdleCallback = cancelIdleCallback;